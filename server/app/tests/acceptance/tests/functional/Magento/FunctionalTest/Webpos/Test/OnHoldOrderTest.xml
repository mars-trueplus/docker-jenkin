<?xml version="1.0" encoding="UTF-8"?>

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="OnHoldOrderTest">
        <annotations>
            <features value="Hold Order"/>
            <stories value="Hold Order"/>
            <title value="Checkout on-hold order"/>
            <description value="Checkout an on-hold order"/>
            <severity value="CRITICAL"/>
            <testCaseId value="OHO-01"/>
            <group value="OnHoldOrder"/>
            <group value="pwapos"/>
        </annotations>
        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="ApiSimpleProduct" stepKey="createSimpleProduct1">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="SimpleProductTestHoldVisibleOnPos" stepKey="enableProductOnPos"/>
            <actionGroup ref="PosOnCheckoutPage" stepKey="PosOnCheckoutPage"/>
        </before>
        <after>
            <!--<wait time="90" stepKey="aa"/>-->
            <deleteData createDataKey="createSimpleProduct1" stepKey="deleteSimpleProduct1"/>
        </after>

        <actionGroup ref="HoldOrder" stepKey="HoldOrder">
            <argument name="dataProduct" value="$$createSimpleProduct1$$" />
            <argument name="dataCustomer" value="default_customer" />
        </actionGroup>

        <actionGroup ref="GetOrderIdFromToast" stepKey="GetOrderIdFromToast"/>
        <dontSee selector="{{CartSection.productFoundOnCartByName($$createSimpleProduct1.name$$)}}" stepKey="waitProductIsClearedFromCartSuccessfully"/>
        <dontSee selector=".customer-drop a" userInput="{{default_customer.fullName}}" stepKey="waitForCustomerIsRemoved"/>

        <!--<see selector="{{ProductListSection.firstProductStock}}" userInput="''" stepKey="checkFirstProductIsOutOfStock" />-->

        <click selector="{{MenuSection.menuButton}}" stepKey="clickMenuButton" />
        <waitForElementVisible selector="{{MenuSection.menuItem('item-orderhold ')}}" time="60" stepKey="waitMenuHoldOrderShow" />
        <click selector="{{MenuSection.menuItem('item-orderhold')}}" stepKey="goToHoldOrderHistoryPage" />
        <wait time="2" stepKey="wait2SecondsBeforeCheckHoldOrder" />

        <fillField stepKey="fillHoldOrderSearchBox" selector="{{OnHoldOrderSection.searchBox}}" userInput="{$orderIdGetOrderIdFromToast}"/>
        <waitForElementVisible selector="{{OnHoldOrderSection.firstOnHoldOrder}}" time="60" stepKey="waitFirstOnHoldOrderShowed" />
        <wait time="2" stepKey="wait2SecondsBeforeCheckHoldOrderDetail" />

        <seeElementInDOM selector="{{OnHoldOrderSection.customerName(default_customer.fullName)}}" stepKey="checkCustomerName" />
        <seeElementInDOM selector="{{OnHoldOrderSection.firstItemName($$createSimpleProduct1.name$$)}}" stepKey="checkItemName" />
        <waitForElementVisible selector="{{OnHoldOrderSection.checkoutButton}}" time="60" stepKey="waitButtonCheckoutIsVisible" />
        <click selector="{{OnHoldOrderSection.checkoutButton}}" stepKey="clickCheckoutOnHoldOrder" />
        <wait time="2" stepKey="wait2SecondsBeforeCheckoutHoldOrder" />

        <waitForElementVisible selector="{{CartSection.productFoundOnCartByName($$createSimpleProduct1.name$$)}}" time="30" stepKey="waitProductIsAddedToCartSuccessfully"/>
        <waitForText userInput="{{default_customer.fullName}}" selector=".customer-drop a" time="30" stepKey="waitForAddCustomer"/>
        <!--<see selector="{{ProductListSection.firstProductStock}}" userInput="Avail: 1" stepKey="checkFirstProductHas1AvailQty" />-->
    </test>
</tests>